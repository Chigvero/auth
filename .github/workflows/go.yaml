name: Go

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: "cr.selcloud.ru/chigvero"
  AUTH_IMAGE_NAME: "auth_image"
  MIGRATOR_IMAGE_NAME: "migrator_image"
  AUTH_CONTAINER_NAME: "auth-prod"
  PG_CONTAINER_NAME: "pg-rod"


jobs:
  image-build-and-push:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v3.7.1

      - name: Login to Github Container Registry
        run: |
          docker login  -u ${{ secrets.REGISTRY_USERNAME }} -p ${{secrets.REGISTRY_PASSWORD}}  ${{env.REGISTRY}}


      - name:  Build and Push Docker Auth Image
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          file: prod.Dockerfile
          push: true
          tags: ${{env.REGISTRY}}/${{env.AUTH_IMAGE_NAME}}:latest

      - name: Build and Push Migrator Image
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          file: migration_prod.Dockerfile
          push: true
          tags: ${{env.REGISTRY}}/${{env.MIGRATOR_IMAGE_NAME}}:latest

  deploy-image:
    runs-on: ubuntu-latest
    needs: image-build-and-push

    steps:
      - name: Deploy to Selectel Cloud via SSH action
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSHKEY }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,CONTAINER_NAME
          script: |
            # Set up variables
            # Login into Selectel Registry
            docker login  -u ${{ secrets.REGISTRY_USERNAME }} -p ${{secrets.REGISTRY_PASSWORD}}  ${{env.REGISTRY}}
            
            # Stop running container and deleting old docker-compose file
            docker  compose stop ${{env.AUTH_CONTAINER_NAME}} ${{env.PG_CONTAINER_NAME}}
            rm -rf docker-compose.yaml prod.env
            
            # removing old containers
            docker rm $(docker ps -aq)
            
            # removing old  images
            docker rmi $(docker images -aq)
           
            # Copy docker compose to server
            scp docker-compose.yaml  ${{ secrets.SSH_USERNAME }}@${{ secrets.SERVER_HOST }}:/home/auth
            scp prod.env ${{ secrets.SSH_USERNAME }}@${{ secrets.SERVER_HOST }}:/home/auth
            
            #Running containers
            docker compose up auth-prod migrator-prod pg-prod 
            
