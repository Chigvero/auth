name: Go

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: "cr.selcloud.ru/chigvero"
  AUTH_IMAGE_NAME: "auth_image"
  MIGRATOR_IMAGE_NAME: "migrator_image"
  AUTH_CONTAINER_NAME: "auth-prod"
  PG_CONTAINER_NAME: "pg-rod"
  MG_CONTAINER_NAME: "migrator-prod"

jobs:
  image-build-and-push:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v3.7.1

      - name: Login to Github Container Registry
        run: |
          docker login  -u ${{ secrets.REGISTRY_USERNAME }} -p ${{secrets.REGISTRY_PASSWORD}}  ${{env.REGISTRY}}


      - name:  Build and Push Docker Auth Image
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          file: prod.Dockerfile
          push: true
          tags: ${{env.REGISTRY}}/${{env.AUTH_IMAGE_NAME}}:latest

      - name: Build and Push Migrator Image
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          file: migration_prod.Dockerfile
          push: true
          tags: ${{env.REGISTRY}}/${{env.MIGRATOR_IMAGE_NAME}}:latest




  deploy-image:
    runs-on: ubuntu-latest
    needs: image-build-and-push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Remove old files on server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSHKEY }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -i private_key.pem -o StrictHostKeyChecking=no ${SSH_USERNAME}@${SERVER_HOST} 'rm -rf /home/auth/docker-compose.yaml /home/auth/prod.env'
          rm private_key.pem

      - name: Transfer docker-compose.yaml
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSHKEY }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          scp -i private_key.pem -o StrictHostKeyChecking=no docker-compose.yaml ${SSH_USERNAME}@${SERVER_HOST}:/home/auth
          rm private_key.pem

      - name: Transfer prod.env
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSHKEY }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          scp -i private_key.pem -o StrictHostKeyChecking=no prod.env ${SSH_USERNAME}@${SERVER_HOST}:/home/auth
          rm private_key.pem

      - name: Deploy to Selectel Cloud via SSH action
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSHKEY }}
          envs: IMAGE_NAME,REGISTRY,GITHUB_SHA,CONTAINER_NAME
          script: |
            # Set up variables
            # Login into Selectel Registry
            docker login -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }} ${{ env.REGISTRY }}

            # Stop running container and deleting old docker-compose file
            docker compose stop ${{ env.AUTH_CONTAINER_NAME }} || true

            # removing old containers
            docker rm $(docker ps -aq) || true

            # removing old images
            docker rmi $(docker images -aq) || true

            # Running containers
            docker compose up ${{ env.AUTH_CONTAINER_NAME }} ${{ env.MG_CONTAINER_NAME }}
